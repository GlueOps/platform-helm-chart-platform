apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: glueops-alerts
  annotations:
    argocd.argoproj.io/sync-wave: "10"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    name: "in-cluster"
    namespace: glueops-core-alerts
  project: glueops-core
  syncPolicy:
    syncOptions:
      - CreateNamespace=true  
      - Replace=true
    automated:
      prune: true
      selfHeal: true
    retry:
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 3m0s
      limit: 5
  source:
    repoURL: https://helm.gpkg.io/project-template
    chart: app
    targetRevision: 0.6.0
    helm:
      values: |
        customResources:
          - |-
            apiVersion: monitoring.coreos.com/v1
            kind: PrometheusRule
            metadata:
              name: glueops-pod-in-bad-state
            spec:
              groups:
              - name: glueops-pod-in-bad-state
                rules:
                - alert: glueops-pod-in-bad-state
                  expr: |
                    (kube_pod_status_phase{namespace=~"^(kube-system|glueops-core-.*|glueops-core|chisel-operator-system)$", pod!~"^(captain-redis-ha-configmap-test|captain-redis-ha-service-test)$", phase=~"^(Failed|Unknown|ContainerCreating|CrashLoopBackOff|ImagePullBackOff|ErrImageNeverPull|Pending)$"} == 1)
                    or
                    (kube_pod_status_ready{namespace=~"^(kube-system|glueops-core-.*|glueops-core|chisel-operator-system)$", pod!~"^(captain-redis-ha-configmap-test|captain-redis-ha-service-test|glueops-backup-and-exports-.*|.*-presync-.*|argocd-redis-secret-.*)$", condition="false"} == 1)
                    or
                    (kube_pod_status_restarts_total{namespace=~"^(kube-system|glueops-core-.*|glueops-core|chisel-operator-system)$"} > 3)
                    or
                    (kube_job_status_failed{namespace=~"^(kube-system|glueops-core-.*|glueops-core|chisel-operator-system)$"} > 0)
                  for: 1m
                  annotations:
                    description: A GlueOps pod is in a bad state.
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
          - |-
            apiVersion: monitoring.coreos.com/v1
            kind: PrometheusRule
            metadata:
              name: glueops-node-rules
            spec:
              groups:
              - name: glueops-node-rules
                rules:
                - alert: glueops-node-rules-NodeHighCpuUsage
                  expr: (100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 95
                  for: 1m
                  annotations:
                    description: worker node high cpu usage
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
                - alert: glueops-node-rules-NodeHighDiskUsage
                  expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) * 100 < 10
                  for: 1m
                  annotations:
                    description: worker node high disk usage
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
                - alert: glueops-node-rules-NodeHighPvcDiskUsage
                  expr: (kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes) * 100 < 10
                  for: 1m
                  annotations:
                    description: high pvc disk usage
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
                - alert: glueops-node-rules-NodeNotReady
                  expr: kube_node_status_condition{condition="Ready",status="false"} == 1
                  for: 8m
                  annotations:
                    description: Worker node not ready
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
                - alert: glueops-node-rules-NodeHighMemory
                  expr: (1 - ((node_memory_MemFree_bytes + node_memory_Cached_bytes + node_memory_Buffers_bytes) / node_memory_MemTotal_bytes)) * 100 > 90
                  for: 1m
                  annotations:
                    description: Worker node high memory usage
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
          - |-
            apiVersion: monitoring.coreos.com/v1
            kind: PrometheusRule
            metadata:
              name: glueops-pvc-near-capacity
            spec:
              groups:
              - name: glueops-pvc-near-capacity
                rules:
                - alert: glueops-pvc-near-capacity
                  expr: |
                    (
                      sum(kubelet_volume_stats_used_bytes{namespace=~"glueops-core.*"}) by (persistentvolumeclaim, namespace)
                      / on (persistentvolumeclaim, namespace) group_left
                      sum(kubelet_volume_stats_capacity_bytes{namespace=~"glueops-core.*"}) by (persistentvolumeclaim, namespace)
                    ) > 0.9
                  for: 1m
                  annotations:
                    description: A GlueOps PVC has exceeded 90% capacity.
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
          - |-
            apiVersion: metacontroller.glueops.dev/v1alpha1
            kind: LokiAlertRuleGroup
            metadata:
              name: glueops-services-high-5xx-rate-nginx
            spec:
              name: glueops-services-high-5xx-rate-nginx
              rules:
                - alert: glueops-services-high-5xx-rate-nginx
                  expr: |
                    sum(
                      count_over_time({namespace="glueops-core-public-ingress-nginx"} | json | (status=~"5\\d{2}" or upstream_status=~"5\\d{2}")[5m])
                    )
                    /
                    sum(
                      count_over_time({namespace="glueops-core-public-ingress-nginx"} | json | response_code=~"\\d{3}"[5m])
                    ) > 0.01
                  for: 1m
                  annotations:
                    description: GlueOps services are returning a high rate of 5xx responses via nginx.
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
          - |-
            apiVersion: metacontroller.glueops.dev/v1alpha1
            kind: LokiAlertRuleGroup
            metadata:
              name: glueops-services-high-5xx-rate-glueops-platform-nginx
            spec:
              name: glueops-services-high-5xx-rate-glueops-platform-nginx
              rules:
                - alert: glueops-services-high-5xx-rate-glueops-platform-nginx
                  expr: |
                    sum(
                      count_over_time({namespace="glueops-core-glueops-platform-ingress-nginx"} | json | (status=~"5\\d{2}" or upstream_status=~"5\\d{2}")[5m])
                    )
                    /
                    sum(
                      count_over_time({namespace="glueops-core-glueops-platform-ingress-nginx"} | json | response_code=~"\\d{3}"[5m])
                    ) > 0.01
                  for: 1m
                  annotations:
                    description: GlueOps services are returning a high rate of 5xx responses via nginx.
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
          - |-
            apiVersion: metacontroller.glueops.dev/v1alpha1
            kind: LokiAlertRuleGroup
            metadata:
              name: glueops-service-external-secrets-secret-store-not-ready
            spec:
              name: glueops-service-external-secrets-secret-store-not-ready
              rules:
                - alert: glueops-service-external-secrets-secret-store-not-ready
                  expr: |
                    sum(
                      count_over_time({app="external-secrets"} | json | (error =~ ".*SecretStore .* is not ready.*")[1m])
                    ) > 0
                  for: 1m
                  annotations:
                    description: GlueOps service external secrets pod must be restarted due to secret store not ready state.
                  labels:
                    alertname: glueops-core-alerts
                    namespace: glueops-core-alerts
