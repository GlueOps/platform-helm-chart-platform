# @ignored
development_mode_enabled: placeholder_this_is_development

host_network:
  enabled: placeholder_enable_host_network
  external_secrets:
    webhook_port: 45010
  cert_manager:
    webhook_secure_port: 45020
  nginx_public:
    controller:
      host_port:
        ports:
          http: 45030
          https: 45031
  kube_pometheus_stack:
    prometheusOperator:
      tls:
        internal_port: 45040
      admissionWebhooks:
        deployment:
          tls:
            internal_port: 45041
  keda:
    webhooks:
      port: 45050
      healthProbePort: 45051
    service: 
      portHttps: 45052
      portHttpsTarget: 45053
    prometheus:
      webhooks:
        port: 45054
      operator:
        port: 45055
      metricServer:
        port: 45056



# -- The Route53 subdomain for the services on your cluster. It will be used as the suffix url for argocd, grafana, vault, and any other services that come out of the box in the glueops platform. Note: you need to create this before using this repo as this repo does not provision DNS Zones for you.
# This is the domain you created through: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
captain_domain: placeholder_cluster_environment.placeholder_tenant_key.placeholder_glueops_root_domain

glueops_alerts:
  # -- Found at `opsgenie_credentials` in the json output that is part of `opsgenie_prometheus_api_keys` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  opsgenie_apikey: placeholder_opsgenie_api_key

# Configuration for backups taken by the GlueOps Platform
glueops_backups:
  # s3 bucket where backups will be stored (one bucket per tenant that gets used for all clusters/environments)
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # Credentials and configuration for backing up vault, found at `vault_credentials` in the json output, values are generated by terraform-module-cloud-multy-prerequisites and are specific to this backup process, due to narrowly scoped permissions
  vault:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_vault_aws_access_key
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_vault_aws_secret_key
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key
  loki_exporter_to_s3:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_loki_exporter_aws_access_key
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_loki_exporter_aws_secret_key
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key
  tls_cert_backup:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_tls_cert_backup_aws_access_key
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_tls_cert_backup_aws_secret_key
    backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key

captain_repo:
  # -- This is a read only deploy key that will be used to read the captain repo. Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  private_b64enc_deploy_key: placeholder_captain_repo_b64enc_private_deploy_key
  # -- This is the github url of the captain repo https://github.com/glueops/development-captains/tenant . Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  ssh_clone_url: placeholder_captain_repo_ssh_clone_url

gitHub:
  # -- Create an Application in the tenant's github organization that has repo scope access and can comment against PRs. https://docs.github.com/en/apps/creating-github-apps/setting-up-a-github-app/creating-a-github-app.  Format the key using format using `cat <key-file> | base64 | tr -d '\n'`
  github_app_id: "placeholder_github_tenant_app_id"
  github_app_installation_id: "placeholder_github_tenant_app_installation_id"
  github_app_b64enc_private_key: placeholder_github_tenant_app_b64enc_private_key
  tenant_github_org: placeholder_tenant_github_org_name
  # -- The format is: <github-org-name>:<github-team-name> (The team should include the developers)
  tenant_github_org_and_team: "placeholder_tenant_github_org_name:developers"

# Used to manage onglueops DNS entries, found at `externaldns_credentials` in the json output of terraform-module-cloud-multy-prerequisites 
externalDns:
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_externaldns_aws_access_key
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_externaldns_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

# Used to manage SSL certificates. Leverages DNS verification for onglueops domains.  Found at `certmanager_credentials` in the json output of terraform-module-cloud-multy-prerequisites
certManager:
  # @ignore
  name_of_default_certificate: default-ingress-cert
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_certmanager_aws_access_key
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_certmanager_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

grafana:
  # @ignored
  github_admin_org_name: placeholder_admin_github_org_name
  # @ignored
  github_admin_team_name: grafana_super_admins
  github_other_org_names: placeholder_tenant_github_org_name
  # -- Default admin password. CHANGE THIS!!!!
  admin_password: placeholder_grafana_admin_password

loki:
  # -- Format: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary, Credentials found at `loki_credentials` of json output of terraform-module-cloud-multy-prerequisites
  bucket: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_loki_aws_access_key
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_loki_aws_secret_key

prometheus:
  # -- Volume of storage requested for each Prometheus PVC, in Gi
  volume_claim_storage_request: "50"

vault:
  # -- Volume of storage requested for each Vault Data PVC, in Gi
  data_storage: 10

nginx:
  # -- number of replicas for ingress controller
  controller_replica_count: 2

pull_request_bot:
  # -- number of seconds to wait before checking ArgoCD for new applications
  watch_for_apps_delay_seconds: '10'
    

dex:
  github:
    # -- To create a clientID please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_id: placeholder_dex_github_client_id
    # -- To create a clientSecret please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_secret: placeholder_dex_github_client_secret
    # -- Specify the github orgs you want to allow access to. This is a list of strings. Note: users still need to be in the proper groups to have access.
    orgs:
      - placeholder_admin_github_org_name
      - placeholder_tenant_github_org_name
  argocd:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_argocd_client_secret
  grafana:
    # -- Specify a unique password here. This will be used to connect grafana via OAuth to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_grafana_client_secret
  pomerium:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_pomerium_client_secret
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
  vault:
    client_secret: placeholder_dex_vault_client_secret

glueops_node_and_tolerations:
  nodeSelector:
    glueops.dev/role: "glueops-platform"
  tolerations:
    - key: "glueops.dev/role"
      operator: "Equal"
      value: "glueops-platform"
      effect: "NoSchedule"


vault_init_controller:
  # -- S3 bucket that will store the vault unseal key(s) and root token
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # -- S3 key/path to the unseal key(s) and root token
  s3_key_path: placeholder_vault_init_controller_s3_key
  # -- S3 Credentials to access the vault_access.json
  aws_accessKey: placeholder_vault_init_controller_aws_access_key
  # -- S3 Credentials to access the vault_access.json
  aws_secretKey: placeholder_vault_init_controller_aws_access_secret
  # -- S3 region to access the vault_access.json
  aws_region: placeholder_aws_region
  # -- How often the controller should run
  reconcile_period: 30
  # -- Enable/Disable reconcile
  pause_reconcile: false
  # -- Enable/Disable restore of an existing backup upon a fresh deployment of vault during cluster bootstrap
  enable_restore: true

tls_cert_restore:
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_tls_cert_restore_aws_access_key
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_tls_cert_restore_aws_secret_key
  backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
  exclude_namespaces: placeholder_tls_cert_restore_exclude_namespaces

glueops_operators:
  waf:
    aws_accessKey: placeholder_glueops_operators_waf_aws_access_key
    aws_secretKey: placeholder_glueops_operators_waf_aws_secret_key
  web_acl:
    aws_accessKey: placeholder_glueops_operators_web_acl_aws_access_key
    aws_secretKey: placeholder_glueops_operators_web_acl_aws_secret_key

container_images:
  app_backup_and_exports:
    vault_backup_validator:
      image:
        registry: ghcr.io
        repository: glueops/vault-backup-validator
        tag: v0.1.3@sha256:ebf6c5a4784aa392748acba9b83dc47f6c6b53781fda9429fe3c20890dd0a880
    backup_tools:
      image:
        registry: ghcr.io
        repository: glueops/backup-tools
        tag: v0.10.1@sha256:04153df00a52cd3feb58e7a6b4c5c12c80a21bc72360693233cb811787d6fd15
    certs_backup_restore:
      image:
        registry: ghcr.io
        repository: glueops/certs-backup-restore
        tag: v0.3.0@sha256:5aa2c4930bcdd7d35b61872d2d82cf3db92586e9ea1036c8194f2b75b10946a1
  app_cluster_info_page:
    cluster_information_help_page_html:
      image:
        registry: ghcr.io
        repository: glueops/cluster-information-help-page-html
        tag: v0.1.2@sha256:f82bce8a783a8d04f4f0c9f1b5a3302afac5a28e7ab0d9696e82ba6f9ef62595
  app_dex:
    dex:
      image:
        registry: ghcr.io
        repository: dexidp/dex
        tag: v2.38.0@sha256:b1d793440a98d7ecde7fa5dbc8cee1204ef0e8918d9e51ef6201f50d12d55925
  app_glueops_alerts:
    cluster_monitoring:
      image:
        registry: ghcr.io
        repository: glueops/cluster-monitoring
        tag: v0.3.0@sha256:b47f1ba267b7d85aa302945b362590757c4baf16dc9bee1794649b7f678117c6
  app_glueops_operator_redis:
    glueops_operator_shared_redis:
      image:
        registry: docker.io
        repository: redis
        tag: 7.2.4-alpine3.19@sha256:7635b0bfdd7dd8552b4b31d6541fef07b734614045b45a52fd5cc27c9dada9e2
  app_glueops_operator_waf_web_acl:
    glueops_operator_waf_web_acl:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-waf-web-acl
        tag: v0.3.2@sha256:1ac2a0f3c2ed4864f21538349c88aa3d7ebc54f457083fe7ff80fa10b043a3be
  app_glueops_operator_waf:
    glueops_operator_waf:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-waf
        tag: v0.6.1@sha256:0bc8804b654d851ca85ed23a885fec71049708e645bfba4bb809a5120a0ea4b0
  app_kube_prometheus_stack:
    grafana:
      image:
        registry: docker.io
        repository: grafana/grafana
        tag: 10.2.5@sha256:33df8202cfe40b8959c4b7237bc309af9ec8637f860fbccff111399dc7c46c32
  app_loki_alert_group_controller:
    loki_alert_group_controller:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-loki-rule-group
        tag: v0.2.8@sha256:f1c0c41558c686838951fe0b6050329655e148ce411f21c9ffa42172bea398ce
  app_loki:
    loki:
      image:
        registry: docker.io
        repository: grafana/loki
        tag: 2.9.5@sha256:55561cf48b19e03d982e1f959efc0d8842b7be141eb5eaaa4b8a8eeb5a2dfc58
  app_network_exporter:
    network_exporter:
      image:
        registry: docker.io # not actually used
        repository: syepes/network_exporter
        tag: 1.7.6@sha256:376c3c80026e79d76eec3a3a1f22621ad6846525c458bb7f1423f3da6398482f
  app_promtail:
    promtail:
      image:
        registry: docker.io
        repository: grafana/promtail
        tag: 2.9.5@sha256:7de69cdd6ec9e85a05069b846db5fa4c744fe8dd384ea415bf0b753da430ff1e
  app_pull_request_bot:
    pull_request_bot:
      image:
        registry: ghcr.io
        repository: glueops/pull-request-bot
        tag: v0.13.0@sha256:676156cecf378b72f89ee0ab560b38e6f6f6603bc782aa2382a8dc4bfc7ea2cb
  app_qr_code_generator:
    qr_code_generator:
      image: 
        registry: ghcr.io
        repository: glueops/qr-code-generator
        tag: v0.2.11@sha256:75553071cec02520d1c664a03bbac0612139683a92dabf1496dce9603987e76c
  app_vault_init_controller:
    vault_init_controller:
      image:
        registry: ghcr.io
        repository: glueops/vault-init-controller
        tag: v0.3.0@sha256:c089e78ae19820f459cd1b098e672281c82155806304159842cff639a926e86d
  app_vault:
    vault:
      image:
        registry: docker.io # not actually used
        repository: hashicorp/vault
        tag: 1.14.10@sha256:14be0a8eb323181a56d10facab3b424809d9921e85d2f2678126ce232766a8e1









