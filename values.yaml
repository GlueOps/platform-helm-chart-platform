# @ignored
development_mode_enabled: placeholder_this_is_development

host_network:
  enabled: placeholder_enable_host_network
  external_secrets:
    webhook_port: 45010
    webhook_metrics_port: 45011
  cert_manager:
    webhook_secure_port: 45020
  nginx_public:
    controller:
      host_port:
        ports:
          http: 45030
          https: 45031
  kube_pometheus_stack:
    prometheusOperator:
      tls:
        internal_port: 45040
      admissionWebhooks:
        deployment:
          tls:
            internal_port: 45041
  keda:
    webhooks:
      port: 45050
      healthProbePort: 45051
    service: 
      portHttps: 45052
      portHttpsTarget: 45053
    prometheus:
      webhooks:
        port: 45054
      operator:
        port: 45055
      metricServer:
        port: 45056

node_ports:
  enabled: placeholder_enable_kubeadm_cluster
  # the chosen http/https values are the same with LoadBalancer values 
  oauth2_proxy:
    ports:
      http: 30010
      https: 30011
  nginx:
    ports:
      http: 30020
      https: 30021

# -- The Route53 subdomain for the services on your cluster. It will be used as the suffix url for argocd, grafana, vault, and any other services that come out of the box in the glueops platform. Note: you need to create this before using this repo as this repo does not provision DNS Zones for you.
# This is the domain you created through: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
captain_domain: placeholder_cluster_environment.placeholder_tenant_key.placeholder_glueops_root_domain

# Configuration for backups taken by the GlueOps Platform
glueops_backups:
  # s3 bucket where backups will be stored (one bucket per tenant that gets used for all clusters/environments)
  s3_bucket_name: placeholder_tenant_s3_multi_region_access_point
  # Credentials and configuration for backing up vault, found at `vault_credentials` in the json output, values are generated by terraform-module-cloud-multy-prerequisites and are specific to this backup process, due to narrowly scoped permissions
  vault:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_vault_aws_access_key
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_vault_aws_secret_key
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key
    backup_prefix: placeholder_vault_backup_s3_key_prefix
    
  tls_cert_backup:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_tls_cert_backup_aws_access_key
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_tls_cert_backup_aws_secret_key
    backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key

captain_repo:
  # -- This is a read only deploy key that will be used to read the captain repo. Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  private_b64enc_deploy_key: placeholder_captain_repo_b64enc_private_deploy_key
  # -- This is the github url of the captain repo https://github.com/glueops/development-captains/tenant . Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  ssh_clone_url: placeholder_captain_repo_ssh_clone_url

gitHub:
  # -- Create an Application in the tenant's github organization that has repo scope access and can comment against PRs. https://docs.github.com/en/apps/creating-github-apps/setting-up-a-github-app/creating-a-github-app.  Format the key using format using `cat <key-file> | base64 | tr -d '\n'`
  github_app_id: "placeholder_github_tenant_app_id"
  github_app_installation_id: "placeholder_github_tenant_app_installation_id"
  github_app_b64enc_private_key: placeholder_github_tenant_app_b64enc_private_key
  tenant_github_org: placeholder_tenant_github_org_name
  # -- The format is: <github-org-name>:<github-team-name> (The team should include the developers)
  tenant_github_org_and_team: "placeholder_tenant_github_org_name:developers"

# Used to manage onglueops DNS entries, found at `externaldns_credentials` in the json output of terraform-module-cloud-multy-prerequisites 
externalDns:
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_externaldns_aws_access_key
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_externaldns_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

# Used to manage SSL certificates. Leverages DNS verification for onglueops domains.  Found at `certmanager_credentials` in the json output of terraform-module-cloud-multy-prerequisites
certManager:
  # @ignore
  name_of_default_certificate: default-ingress-cert
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_certmanager_aws_access_key
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_certmanager_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

grafana:
  # @ignored
  github_admin_org_name: placeholder_admin_github_org_name
  # @ignored
  github_admin_team_name: grafana_super_admins
  github_other_org_names: placeholder_tenant_github_org_name
  # -- Default admin password. CHANGE THIS!!!!
  admin_password: placeholder_grafana_admin_password

loki:
  # -- Format: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary, Credentials found at `loki_credentials` of json output of terraform-module-cloud-multy-prerequisites
  bucket: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_loki_aws_access_key
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_loki_aws_secret_key

prometheus:
  # -- Volume of storage requested for each Prometheus PVC, in Gi
  volume_claim_storage_request: "50"

vault:
  # -- Volume of storage requested for each Vault Data PVC, in Gi
  data_storage: 10

nginx:
  # -- number of replicas for ingress controller
  controller_replica_count: 2

pull_request_bot:
  # -- number of seconds to wait before checking ArgoCD for new applications
  watch_for_apps_delay_seconds: '10'
    

dex:
  github:
    # -- To create a clientID please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_id: placeholder_dex_github_client_id
    # -- To create a clientSecret please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_secret: placeholder_dex_github_client_secret
    # -- Specify the github orgs you want to allow access to. This is a list of strings. Note: users still need to be in the proper groups to have access.
    orgs:
      - placeholder_admin_github_org_name
      - placeholder_tenant_github_org_name
  argocd:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_argocd_client_secret
  grafana:
    # -- Specify a unique password here. This will be used to connect grafana via OAuth to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_grafana_client_secret
  vault:
    client_secret: placeholder_dex_vault_client_secret
  oauth2:
    client_secret: placeholder_dex_oauth2_client_secret
    cookie_secret: placeholder_dex_oauth2_cookie_secret

glueops_node_and_tolerations:
  nodeSelector:
    glueops.dev/role: "glueops-platform"
  tolerations:
    - key: "glueops.dev/role"
      operator: "Equal"
      value: "glueops-platform"
      effect: "NoSchedule"
daemonset_tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists


vault_init_controller:
  # -- S3 bucket that will store the vault unseal key(s) and root token
  s3_bucket_name: placeholder_tenant_s3_multi_region_access_point
  # -- S3 key/path to the unseal key(s) and root token
  s3_key_path: placeholder_vault_init_controller_s3_key
  # -- S3 Credentials to access the vault_access.json
  aws_accessKey: placeholder_vault_init_controller_aws_access_key
  # -- S3 Credentials to access the vault_access.json
  aws_secretKey: placeholder_vault_init_controller_aws_access_secret
  # -- S3 region to access the vault_access.json
  aws_region: placeholder_aws_region
  # -- How often the controller should run
  reconcile_period: 30
  # -- Enable/Disable reconcile
  pause_reconcile: false
  # -- Enable/Disable restore of an existing backup upon a fresh deployment of vault during cluster bootstrap
  enable_restore: true

tls_cert_restore:
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_tls_cert_restore_aws_access_key
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_tls_cert_restore_aws_secret_key
  backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
  exclude_namespaces: placeholder_tls_cert_restore_exclude_namespaces

base_registries:
  docker_io: "replicas.mirror.gpkg.io/proxy-docker-io"
  gcr_io: "replicas.mirror.gpkg.io/proxy-gcr-io"
  ghcr_io: "replicas.mirror.gpkg.io/proxy-ghcr-io"
  quay_io: "replicas.mirror.gpkg.io/proxy-quay-io"
  mcr_microsoft_com: "replicas.mirror.gpkg.io/proxy-mcr-microsoft-com"
  public_ecr_aws: "replicas.mirror.gpkg.io/proxy-public-ecr-aws"
  registry_k8s_io: "replicas.mirror.gpkg.io/proxy-registry-k8s-io"

container_images:
  app_cert_manager:
    cert_manager:
      image:
        registry: replicas.mirror.gpkg.io/proxy-quay-io
        repository: jetstack/cert-manager-controller
        tag: v1.18.2@sha256:81316365dc0b713eddddfbf9b8907b2939676e6c0e12beec0f9625f202a36d16
    cert_restore:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/certs-backup-restore
        tag: v0.12.8@sha256:1edd17bfd8737b7231c17fc93167be1ad16fa025f9b237e01fbf39a4df76117d
  app_descheduler:
    descheduler:
      image:
        registry: replicas.mirror.gpkg.io/proxy-registry-k8s-io
        repository: descheduler/descheduler
        tag: v0.33.0
  app_external_secrets:
    external_secrets:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: external-secrets/external-secrets
        tag: v0.16.2@sha256:bf08e22f09fe2467d62ee54b54906c065d1fcb366ff47b1dbe18186b1788d649
  app_external_dns:
    external_dns:
      image:
        registry: replicas.mirror.gpkg.io/proxy-registry-k8s-io
        repository: external-dns/external-dns
        tag: v0.17.0@sha256:85eba2727b410c8f8093d641a4b1a29671878db94d525a70a4108d10ba8eef5f

  app_backup_and_exports:
    vault_backup_validator:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/vault-backup-validator
        tag: v2.0.1@sha256:8c2b0cb50b08a242b52006995d448b3e86a83df065383bbd24733c967df425a9
    backup_tools:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/backup-tools
        tag: v2.1.5@sha256:2748babb25059208e7ca15c181a1d39ce6477064b5b805471c1fb3c4e579e6a6
    certs_backup_restore:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/certs-backup-restore
        tag: v0.12.8@sha256:1edd17bfd8737b7231c17fc93167be1ad16fa025f9b237e01fbf39a4df76117d
  app_cluster_info_page:
    cluster_information_help_page_html:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/cluster-information-help-page-html
        tag: v0.5.0@sha256:5396f0638205a218f40d6c71edeff538b2e44dae63d3ffc34cb0b75f37b3964b
  app_dex:
    dex:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: dexidp/dex
        tag: v2.44.0@sha256:5d0656fce7d453c0e3b2706abf40c0d0ce5b371fb0b73b3cf714d05f35fa5f86
  app_glueops_alerts:
    cluster_monitoring:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/cluster-monitoring
        tag: v0.8.2@sha256:06bad372dfd21d2bf807d26fb6d354f885d7e4fe63a2108f7446f20be2b5413d
  app_kube_prometheus_stack:
    grafana:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: grafana/grafana
        tag: 10.4.19-security-01@sha256:5584505cb75be8cb14c19d7473a87e2675c68b34b546bc1923ef74300c337111
  app_loki_alert_group_controller:
    loki_alert_group_controller:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/metacontroller-operator-loki-rule-group
        tag: v0.4.6@sha256:61aa2e48fd5c2277551daca68f287e77530a357d280a8199a5db5724b255401c
  app_loki:
    loki:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: grafana/loki
        tag: 2.9.10@sha256:35b02acc67654ddc38273e519b4f26f3967a907b9db5489af300c21f37ee1ae7
  app_network_exporter:
    network_exporter:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: syepes/network_exporter
        tag: 1.7.10@sha256:66b0468ca13c59556b2658eaa31520e615c83cdafb4b194a0e792ebe7630ef69
  app_promtail:
    promtail:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: grafana/promtail
        tag: 2.9.10@sha256:63a2e57a5b1401109f77d36a49a637889d431280ed38f5f885eedcd3949e52cf
  app_pull_request_bot:
    pull_request_bot:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/pull-request-bot
        tag: v1.1.0@sha256:f8b5eb18e1194f08ad0decddcf2c7ef73aaf22953347aca77d2e528a68549c67
  app_go_healthz:
    go_healthz:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/go-healthz
        tag: v0.0.10@sha256:64dd3450a234497d36acc028c58615a21b4bd6850c9c0343bb0319c3db0ba04c
  app_qr_code_generator:
    qr_code_generator:
      image: 
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/qr-code-generator
        tag: v1.0.1@sha256:3ce0da14140856f0a8d8c39f8155903d14ca145f2d35ca09be8c2aba465b7a3e
  app_vault_init_controller:
    vault_init_controller:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: glueops/vault-init-controller
        tag: v2.0.1@sha256:ed23f63142ccaa9d611ef70422aca003797864b3c60581c6d2d8c7aa25702e78
  app_vault:
    vault:
      image:
        registry: replicas.mirror.gpkg.io/proxy-quay-io
        repository: openbao/openbao
        tag: 2.4.3@sha256:48174d0c98dbb955731c5d54a7e7083987fd25a7fb5d793181db8576ada8ed64
  app_metacontroller:
    metacontroller:
      image:
        registry: replicas.mirror.gpkg.io/proxy-ghcr-io
        repository: metacontroller/metacontroller
        tag: v4.12.5@sha256:8d8f21f3f4e36897b6405f5507fefce209ae805425e556361d93f3ae0ed16ce6 #this might need to be updated manually because of renovatebot errors
  app_fluent_operator:
    kubesphere:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: kubesphere/fluent-operator
        tag: v3.5.0@sha256:a5ace7bc1a33d33dfbda2136ccddb6f95bb4165f5f91daadb8f2dd8230854aa1
  app_ingress_nginx:
    controller:
      image:
        registry: replicas.mirror.gpkg.io/proxy-registry-k8s-io
        repository: ingress-nginx/controller
        tag: v1.13.3@sha256:1b044f6dcac3afbb59e05d98463f1dec6f3d3fb99940bc12ca5d80270358e3bd
  app_oauth2_proxy:
    oauth2_proxy:
      image:
        registry: replicas.mirror.gpkg.io/proxy-quay-io
        repository: oauth2-proxy/oauth2-proxy
        tag: v7.12.0@sha256:786bed0f000c0f8a7b31619244ebab02406a8856a4faf3f5fb1df61fbd6c30ed
  app_curlimages:
    curl:
      image:
        registry: replicas.mirror.gpkg.io/proxy-docker-io
        repository: curlimages/curl
        tag: 8.16.0@sha256:463eaf6072688fe96ac64fa623fe73e1dbe25d8ad6c34404a669ad3ce1f104b6

enable_chisel_proxy_protocol: false

kube_etcd:
  enabled: placeholder_enable_kubeadm_cluster
  serviceMonitor:
    caFile: /etc/prometheus/secrets/etcd-client/ca.crt
    certFile: /etc/prometheus/secrets/etcd-client/apiserver-etcd-client.crt
    keyFile: /etc/prometheus/secrets/etcd-client/apiserver-etcd-client.key

