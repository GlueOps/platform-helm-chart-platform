# @ignored
development_mode_enabled: placeholder_this_is_development

host_network:
  enabled: placeholder_enable_host_network
  external_secrets:
    webhook_port: 45010
  cert_manager:
    webhook_secure_port: 45020
  nginx_public:
    controller:
      host_port:
        ports:
          http: 45030
          https: 45031
  kube_pometheus_stack:
    prometheusOperator:
      tls:
        internal_port: 45040
      admissionWebhooks:
        deployment:
          tls:
            internal_port: 45041
  keda:
    webhooks:
      port: 45050
      healthProbePort: 45051
    service: 
      portHttps: 45052
      portHttpsTarget: 45053
    prometheus:
      webhooks:
        port: 45054
      operator:
        port: 45055
      metricServer:
        port: 45056



# -- The Route53 subdomain for the services on your cluster. It will be used as the suffix url for argocd, grafana, vault, and any other services that come out of the box in the glueops platform. Note: you need to create this before using this repo as this repo does not provision DNS Zones for you.
# This is the domain you created through: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
captain_domain: placeholder_cluster_environment.placeholder_tenant_key.placeholder_glueops_root_domain

glueops_alerts:
  # -- Found at `opsgenie_credentials` in the json output that is part of `opsgenie_prometheus_api_keys` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  opsgenie_apikey: placeholder_opsgenie_api_key

# Configuration for backups taken by the GlueOps Platform
glueops_backups:
  # s3 bucket where backups will be stored (one bucket per tenant that gets used for all clusters/environments)
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # Credentials and configuration for backing up vault, found at `vault_credentials` in the json output, values are generated by terraform-module-cloud-multy-prerequisites and are specific to this backup process, due to narrowly scoped permissions
  vault:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_vault_aws_access_key
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_vault_aws_secret_key
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key
  tls_cert_backup:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_tls_cert_backup_aws_access_key
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_tls_cert_backup_aws_secret_key
    backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key

captain_repo:
  # -- This is a read only deploy key that will be used to read the captain repo. Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  private_b64enc_deploy_key: placeholder_captain_repo_b64enc_private_deploy_key
  # -- This is the github url of the captain repo https://github.com/glueops/development-captains/tenant . Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  ssh_clone_url: placeholder_captain_repo_ssh_clone_url

gitHub:
  # -- Create an Application in the tenant's github organization that has repo scope access and can comment against PRs. https://docs.github.com/en/apps/creating-github-apps/setting-up-a-github-app/creating-a-github-app.  Format the key using format using `cat <key-file> | base64 | tr -d '\n'`
  github_app_id: "placeholder_github_tenant_app_id"
  github_app_installation_id: "placeholder_github_tenant_app_installation_id"
  github_app_b64enc_private_key: placeholder_github_tenant_app_b64enc_private_key
  tenant_github_org: placeholder_tenant_github_org_name
  # -- The format is: <github-org-name>:<github-team-name> (The team should include the developers)
  tenant_github_org_and_team: "placeholder_tenant_github_org_name:developers"

# Used to manage onglueops DNS entries, found at `externaldns_credentials` in the json output of terraform-module-cloud-multy-prerequisites 
externalDns:
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_externaldns_aws_access_key
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_externaldns_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

# Used to manage SSL certificates. Leverages DNS verification for onglueops domains.  Found at `certmanager_credentials` in the json output of terraform-module-cloud-multy-prerequisites
certManager:
  # @ignore
  name_of_default_certificate: default-ingress-cert
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_certmanager_aws_access_key
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_certmanager_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

grafana:
  # @ignored
  github_admin_org_name: placeholder_admin_github_org_name
  # @ignored
  github_admin_team_name: grafana_super_admins
  github_other_org_names: placeholder_tenant_github_org_name
  # -- Default admin password. CHANGE THIS!!!!
  admin_password: placeholder_grafana_admin_password

loki:
  # -- Format: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary, Credentials found at `loki_credentials` of json output of terraform-module-cloud-multy-prerequisites
  bucket: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_loki_aws_access_key
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_loki_aws_secret_key

prometheus:
  # -- Volume of storage requested for each Prometheus PVC, in Gi
  volume_claim_storage_request: "50"

vault:
  # -- Volume of storage requested for each Vault Data PVC, in Gi
  data_storage: 10

nginx:
  # -- number of replicas for ingress controller
  controller_replica_count: 2

pull_request_bot:
  # -- number of seconds to wait before checking ArgoCD for new applications
  watch_for_apps_delay_seconds: '10'
    

dex:
  github:
    # -- To create a clientID please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_id: placeholder_dex_github_client_id
    # -- To create a clientSecret please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_secret: placeholder_dex_github_client_secret
    # -- Specify the github orgs you want to allow access to. This is a list of strings. Note: users still need to be in the proper groups to have access.
    orgs:
      - placeholder_admin_github_org_name
      - placeholder_tenant_github_org_name
  argocd:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_argocd_client_secret
  grafana:
    # -- Specify a unique password here. This will be used to connect grafana via OAuth to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_grafana_client_secret
  pomerium:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_pomerium_client_secret
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
  vault:
    client_secret: placeholder_dex_vault_client_secret

glueops_node_and_tolerations:
  nodeSelector:
    glueops.dev/role: "glueops-platform"
  tolerations:
    - key: "glueops.dev/role"
      operator: "Equal"
      value: "glueops-platform"
      effect: "NoSchedule"
daemonset_tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists


vault_init_controller:
  # -- S3 bucket that will store the vault unseal key(s) and root token
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # -- S3 key/path to the unseal key(s) and root token
  s3_key_path: placeholder_vault_init_controller_s3_key
  # -- S3 Credentials to access the vault_access.json
  aws_accessKey: placeholder_vault_init_controller_aws_access_key
  # -- S3 Credentials to access the vault_access.json
  aws_secretKey: placeholder_vault_init_controller_aws_access_secret
  # -- S3 region to access the vault_access.json
  aws_region: placeholder_aws_region
  # -- How often the controller should run
  reconcile_period: 30
  # -- Enable/Disable reconcile
  pause_reconcile: false
  # -- Enable/Disable restore of an existing backup upon a fresh deployment of vault during cluster bootstrap
  enable_restore: true

tls_cert_restore:
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_tls_cert_restore_aws_access_key
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_tls_cert_restore_aws_secret_key
  backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
  exclude_namespaces: placeholder_tls_cert_restore_exclude_namespaces

glueops_operators:
  waf:
    aws_accessKey: placeholder_glueops_operators_waf_aws_access_key
    aws_secretKey: placeholder_glueops_operators_waf_aws_secret_key
  web_acl:
    aws_accessKey: placeholder_glueops_operators_web_acl_aws_access_key
    aws_secretKey: placeholder_glueops_operators_web_acl_aws_secret_key

container_images:
  app_backup_and_exports:
    vault_backup_validator:
      image:
        registry: ghcr.io
        repository: glueops/vault-backup-validator
        tag: v0.3.1@sha256:b0680a72ee87161295d291dac9bf18667953d464b3826cc22f6de36b08f44628
    backup_tools:
      image:
        registry: ghcr.io
        repository: glueops/backup-tools
        tag: v0.15.0@sha256:35fe273831444ea0a0cf38f3be60e892d2d409d0c287eba24f277cc722773d18
    certs_backup_restore:
      image:
        registry: ghcr.io
        repository: glueops/certs-backup-restore
        tag: v0.7.0@sha256:28f6866f99b6ebaae3d587978fee86dfcb82b100fead0fd73ad6df8e3e5699e2
  app_cluster_info_page:
    cluster_information_help_page_html:
      image:
        registry: ghcr.io
        repository: glueops/cluster-information-help-page-html
        tag: v0.4.1@sha256:a706cf40a6e94f99e00367a281d11a80747695fa71054afd83de93f82a5f327d
  app_dex:
    dex:
      image:
        registry: ghcr.io
        repository: dexidp/dex
        tag: v2.41.1@sha256:bc7cfce7c17f52864e2bb2a4dc1d2f86a41e3019f6d42e81d92a301fad0c8a1d
  app_glueops_alerts:
    cluster_monitoring:
      image:
        registry: ghcr.io
        repository: glueops/cluster-monitoring
        tag: v0.6.0@sha256:17cf1fd2f0fce866dee84682b2b47a06ddd05fc650c7c2218b610893189bc4ba
  app_glueops_operator_redis:
    glueops_operator_shared_redis:
      image:
        registry: docker.io
        repository: redis
        tag: 7.2.5-alpine3.19@sha256:8f157725f8eee31e65a8d4765f1f986d76aedc1a0503345dfb63a2b1b5a441ee
  app_glueops_operator_waf_web_acl:
    glueops_operator_waf_web_acl:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-waf-web-acl
        tag: v0.8.0@sha256:d3c4973ed9638c30c7f7494d2b1f0c209241bf2fcb01aa0c9b7ce7247bdeb69c
  app_glueops_operator_waf:
    glueops_operator_waf:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-waf
        tag: v0.11.0@sha256:72c14e6f889574ae566de9051939e6d2c64ade61f7e0d0e2fdf22aed49864c06
  app_kube_prometheus_stack:
    grafana:
      image:
        registry: docker.io
        repository: grafana/grafana
        tag: 10.4.7@sha256:578309639f1343b02883d7d4fc2b7f3783747a9f53e7b3ec34224e92eedb55ad
  app_loki_alert_group_controller:
    loki_alert_group_controller:
      image:
        registry: ghcr.io
        repository: glueops/metacontroller-operator-loki-rule-group
        tag: v0.4.3@sha256:95c16e7d88aa9a145209670d563222b812d2eb8d4ed6d9ab6337c08bc0787f67
  app_loki:
    loki:
      image:
        registry: docker.io
        repository: grafana/loki
        tag: 2.9.10@sha256:35b02acc67654ddc38273e519b4f26f3967a907b9db5489af300c21f37ee1ae7
  app_network_exporter:
    network_exporter:
      image:
        registry: docker.io # not actually used
        repository: syepes/network_exporter
        tag: 1.7.8@sha256:1105eb54a801b1e6af43ca7e6464fef19189ef8319fe1399b61f5da51a88bb93
  app_promtail:
    promtail:
      image:
        registry: docker.io
        repository: grafana/promtail
        tag: 2.9.10@sha256:63a2e57a5b1401109f77d36a49a637889d431280ed38f5f885eedcd3949e52cf
  app_pull_request_bot:
    pull_request_bot:
      image:
        registry: ghcr.io
        repository: glueops/pull-request-bot
        tag: v0.19.0@sha256:4bf8aeb9bebcc5d5a3f2fe1ffff43f1265476633efd7fbacc22788e906923ccf
  app_qr_code_generator:
    qr_code_generator:
      image: 
        registry: ghcr.io
        repository: glueops/qr-code-generator
        tag: v0.5.3@sha256:d954e5f8ada596870afc8ac38929d92f52332f59083c45b0dd1660a3549b133d
  app_vault_init_controller:
    vault_init_controller:
      image:
        registry: ghcr.io
        repository: glueops/vault-init-controller
        tag: v0.7.0@sha256:4b217fd3961e02a704394fb02380d2b77983bab82a1d3b4082e436c9f175f583
  app_vault:
    vault:
      image:
        registry: docker.io # not actually used
        repository: hashicorp/vault
        tag: 1.14.10@sha256:14be0a8eb323181a56d10facab3b424809d9921e85d2f2678126ce232766a8e1
  app_metacontroller:
    metacontroller:
      image:
        registry: ghcr.io
        repository: metacontroller/metacontroller
        tag: v4.11.17@sha256:b5e3c6045355aa4b2102a151b7edcd1de22ab9f552b244f2c9475103d7558634 #this might need to be updated manually because of renovatebot errors
  app_fluent_operator:
    image:
      registry: docker.io
      repository: kubesphere/fluent-operator
      tag: v2.7.0@sha256:b0668c0d878bde4ab04802a7e92d0dd3bef4c1fed1b5e63cf83d49bb3c5d3947

      
