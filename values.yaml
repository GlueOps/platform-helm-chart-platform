# @ignored
development_mode_enabled: placeholder_this_is_development

host_network:
  enabled: placeholder_enable_host_network
  external_secrets:
    webhook_port: 45010
  cert_manager:
    webhook_secure_port: 45020
  nginx_public:
    controller:
      host_port:
        ports:
          http: 45030
          https: 45031
  kube_pometheus_stack:
    prometheusOperator:
      tls:
        internal_port: 45040
      admissionWebhooks:
        deployment:
          tls:
            internal_port: 45041
  keda:
    webhooks:
      port: 45050
      healthProbePort: 45051
    service: 
      portHttps: 45052
      portHttpsTarget: 45053
    prometheus:
      webhooks:
        port: 45054
      operator:
        port: 45055
      metricServer:
        port: 45056



# -- The Route53 subdomain for the services on your cluster. It will be used as the suffix url for argocd, grafana, vault, and any other services that come out of the box in the glueops platform. Note: you need to create this before using this repo as this repo does not provision DNS Zones for you.
# This is the domain you created through: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
captain_domain: placeholder_cluster_environment.placeholder_tenant_key.placeholder_glueops_root_domain

glueops_alerts:
  # -- Found at `opsgenie_credentials` in the json output that is part of `opsgenie_prometheus_api_keys` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  opsgenie_apikey: placeholder_opsgenie_api_key

# Configuration for backups taken by the GlueOps Platform
glueops_backups:
  # s3 bucket where backups will be stored (one bucket per tenant that gets used for all clusters/environments)
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # Credentials and configuration for backing up vault, found at `vault_credentials` in the json output, values are generated by terraform-module-cloud-multy-prerequisites and are specific to this backup process, due to narrowly scoped permissions
  vault:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_vault_aws_access_key
    # -- Part of `vault_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_vault_aws_secret_key
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key
  tls_cert_backup:
    # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_region: placeholder_aws_region
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_accessKey: placeholder_tls_cert_backup_aws_access_key
    # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
    aws_secretKey: placeholder_tls_cert_backup_aws_secret_key
    backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
    # @ignored
    cron_expression: "0 */6 * * *"
    company_key: placeholder_tenant_key

captain_repo:
  # -- This is a read only deploy key that will be used to read the captain repo. Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  private_b64enc_deploy_key: placeholder_captain_repo_b64enc_private_deploy_key
  # -- This is the github url of the captain repo https://github.com/glueops/development-captains/tenant . Part of output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  ssh_clone_url: placeholder_captain_repo_ssh_clone_url

gitHub:
  # -- Create an Application in the tenant's github organization that has repo scope access and can comment against PRs. https://docs.github.com/en/apps/creating-github-apps/setting-up-a-github-app/creating-a-github-app.  Format the key using format using `cat <key-file> | base64 | tr -d '\n'`
  github_app_id: "placeholder_github_tenant_app_id"
  github_app_installation_id: "placeholder_github_tenant_app_installation_id"
  github_app_b64enc_private_key: placeholder_github_tenant_app_b64enc_private_key
  tenant_github_org: placeholder_tenant_github_org_name
  # -- The format is: <github-org-name>:<github-team-name> (The team should include the developers)
  tenant_github_org_and_team: "placeholder_tenant_github_org_name:developers"

# Used to manage onglueops DNS entries, found at `externaldns_credentials` in the json output of terraform-module-cloud-multy-prerequisites 
externalDns:
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_externaldns_aws_access_key
  # -- Part of `externaldns_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_externaldns_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

# Used to manage SSL certificates. Leverages DNS verification for onglueops domains.  Found at `certmanager_credentials` in the json output of terraform-module-cloud-multy-prerequisites
certManager:
  # @ignore
  name_of_default_certificate: default-ingress-cert
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_certmanager_aws_access_key
  # -- Part of `certmanager_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_certmanager_aws_secret_key
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region

grafana:
  # @ignored
  github_admin_org_name: placeholder_admin_github_org_name
  # @ignored
  github_admin_team_name: grafana_super_admins
  github_other_org_names: placeholder_tenant_github_org_name
  # -- Default admin password. CHANGE THIS!!!!
  admin_password: placeholder_grafana_admin_password

loki:
  # -- Format: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary, Credentials found at `loki_credentials` of json output of terraform-module-cloud-multy-prerequisites
  bucket: glueops-tenant-placeholder_tenant_key-placeholder_cluster_environment-loki-primary
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_loki_aws_access_key
  # -- Part of `loki_s3_iam_credentials` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_loki_aws_secret_key

prometheus:
  # -- Volume of storage requested for each Prometheus PVC, in Gi
  volume_claim_storage_request: "50"

vault:
  # -- Volume of storage requested for each Vault Data PVC, in Gi
  data_storage: 10

nginx:
  # -- number of replicas for ingress controller
  controller_replica_count: 2

pull_request_bot:
  # -- number of seconds to wait before checking ArgoCD for new applications
  watch_for_apps_delay_seconds: '10'
    

dex:
  github:
    # -- To create a clientID please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_id: placeholder_dex_github_client_id
    # -- To create a clientSecret please reference: https://github.com/GlueOps/github-oauth-apps/tree/v0.0.1
    client_secret: placeholder_dex_github_client_secret
    # -- Specify the github orgs you want to allow access to. This is a list of strings. Note: users still need to be in the proper groups to have access.
    orgs:
      - placeholder_admin_github_org_name
      - placeholder_tenant_github_org_name
  argocd:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_argocd_client_secret
  grafana:
    # -- Specify a unique password here. This will be used to connect grafana via OAuth to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_grafana_client_secret
  pomerium:
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
    client_secret: placeholder_dex_pomerium_client_secret
    # -- Specify a unique password here. This will be used to connect argocd via OIDC to the Dex IDP. You can create one with in bash `openssl rand -base64 32`
  vault:
    client_secret: placeholder_dex_vault_client_secret

glueops_node_and_tolerations:
  nodeSelector:
    glueops.dev/role: "glueops-platform"
  tolerations:
    - key: "glueops.dev/role"
      operator: "Equal"
      value: "glueops-platform"
      effect: "NoSchedule"
daemonset_tolerations:
  - effect: NoSchedule
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/network-unavailable
    operator: Exists


vault_init_controller:
  # -- S3 bucket that will store the vault unseal key(s) and root token
  s3_bucket_name: glueops-tenant-placeholder_tenant_key-primary
  # -- S3 key/path to the unseal key(s) and root token
  s3_key_path: placeholder_vault_init_controller_s3_key
  # -- S3 Credentials to access the vault_access.json
  aws_accessKey: placeholder_vault_init_controller_aws_access_key
  # -- S3 Credentials to access the vault_access.json
  aws_secretKey: placeholder_vault_init_controller_aws_access_secret
  # -- S3 region to access the vault_access.json
  aws_region: placeholder_aws_region
  # -- How often the controller should run
  reconcile_period: 30
  # -- Enable/Disable reconcile
  pause_reconcile: false
  # -- Enable/Disable restore of an existing backup upon a fresh deployment of vault during cluster bootstrap
  enable_restore: true

tls_cert_restore:
  # -- Should be the same `primary_region` you used in: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_region: placeholder_aws_region
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_accessKey: placeholder_tls_cert_restore_aws_access_key
  # -- Part of `loki_log_exporter` output from terraform-module-cloud-multy-prerequisites: https://github.com/GlueOps/terraform-module-cloud-multy-prerequisites
  aws_secretKey: placeholder_tls_cert_restore_aws_secret_key
  backup_prefix: placeholder_tls_cert_backup_s3_key_prefix
  exclude_namespaces: placeholder_tls_cert_restore_exclude_namespaces

base_registry: ghcr.io/glueops/mirror
container_images:
  app_external_secrets:
    external_secrets:
      image:
        repository: external-secrets/external-secrets
        tag: v0.10.7@sha256:937c550ff84dded588324be89df42b2fa7d2cb2981271343c956b5348ae64011
  app_backup_and_exports:
    vault_backup_validator:
      image:
        repository: glueops/vault-backup-validator
        tag: v0.3.6@sha256:b0b48ae02bdfa60a590312c0dbeb905261053ef46512c326b78eab9701d9b31b
    backup_tools:
      image:
        repository: glueops/backup-tools
        tag: v0.18.2@sha256:394c0035ae440eba53a5184b065e8595dbf37180050a41881ea56929997d84e2
    certs_backup_restore:
      image:
        repository: glueops/certs-backup-restore
        tag: v0.10.2@sha256:6d402e2a7a39d8dcf1e93da3fb305f4756cf5fa9ea2b2ae639655c5f8e8963a9
  app_cluster_info_page:
    cluster_information_help_page_html:
      image:
        repository: glueops/cluster-information-help-page-html
        tag: v0.4.5@sha256:5f1843dfa2f76eea0a5e9a792867305d50b6f2d27e010d003a9ce79eb4188d16
  app_dex:
    dex:
      image:
        repository: dexidp/dex
        tag: v2.41.1@sha256:bc7cfce7c17f52864e2bb2a4dc1d2f86a41e3019f6d42e81d92a301fad0c8a1d
  app_glueops_alerts:
    cluster_monitoring:
      image:
        repository: glueops/cluster-monitoring
        tag: v0.8.1@sha256:aa12c39244682d61a48fc374f97f318943c42c36347bf333105c5f4802721419
  app_kube_prometheus_stack:
    grafana:
      image:
        repository: grafana/grafana
        tag: 10.4.13@sha256:c8644d0d41757dd444bd1aabc23740be71f0a34549128454a2b37f57a0c496b0
  app_loki_alert_group_controller:
    loki_alert_group_controller:
      image:
        repository: glueops/metacontroller-operator-loki-rule-group
        tag: v0.4.6@sha256:61aa2e48fd5c2277551daca68f287e77530a357d280a8199a5db5724b255401c
  app_loki:
    loki:
      image:
        repository: grafana/loki
        tag: 2.9.10@sha256:35b02acc67654ddc38273e519b4f26f3967a907b9db5489af300c21f37ee1ae7
  app_network_exporter:
    network_exporter:
      image:
        repository: syepes/network_exporter
        tag: 1.7.9@sha256:36cd647c80c30e3f5b78f9d2ca60f38e1d024fb3b9588a845cac2dc3f4fb75e1
  app_promtail:
    promtail:
      image:
        repository: grafana/promtail
        tag: 2.9.10@sha256:63a2e57a5b1401109f77d36a49a637889d431280ed38f5f885eedcd3949e52cf
  app_pull_request_bot:
    pull_request_bot:
      image:
        repository: glueops/pull-request-bot
        tag: v0.22.3@sha256:b03549d0302622a9e672d7d502e5d5bba8c234a668ff5bc6fdb21c88abb34363
  app_qr_code_generator:
    qr_code_generator:
      image: 
        repository: glueops/qr-code-generator
        tag: v0.7.1@sha256:884d67d4e17f3c4567dcb79eb3491099c448b58dc0c81ae848b50cd8cf314d22
  app_vault_init_controller:
    vault_init_controller:
      image:
        repository: glueops/vault-init-controller
        tag: v0.9.0@sha256:b761bcbe551a3d42428f58f44e6e2c348dac203c4f0e85cc140c99a2f76d47c5
  app_vault:
    vault:
      image:
        repository: hashicorp/vault
        tag: 1.17.6@sha256:74a4ab138ab5d64725e89cd9a9c73f7040c7fe49e98b71697b275ca9a69919df
  app_metacontroller:
    metacontroller:
      image:
        repository: metacontroller/metacontroller
        tag: v4.11.25@sha256:02ba252a4ffff7f6d24d9342bd54ca055e6e4a10be1945ff5afbea31515c8ce7 #this might need to be updated manually because of renovatebot errors
  app_fluent_operator:
    kubesphere:
      image:
        repository: kubesphere/fluent-operator
        tag: v2.7.0@sha256:b0668c0d878bde4ab04802a7e92d0dd3bef4c1fed1b5e63cf83d49bb3c5d3947
  app_ingress_nginx:
    controller:
      image:
        repository: ingress-nginx/controller
        tag: v1.11.5@sha256:a1cbad75b0a7098bf9325132794dddf9eef917e8a7fe246749a4cea7ff6f01eb
  app_cert_manager:
    cert_restore:
      image:
        repository: glueops/certs-backup-restore
        tag: v0.10.1@sha256:71c22ce97be9daddbfab90a26a59a900c00c18daec361c806918e52903513238

